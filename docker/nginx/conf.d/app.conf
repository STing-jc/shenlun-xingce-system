# 申论行测学习系统 - Nginx站点配置
# 版本: v2.0.0
# 描述: 应用专用的Nginx配置文件

# ============================================================================
# HTTP重定向到HTTPS
# ============================================================================

server {
    listen 80;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # Let's Encrypt验证路径
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # 其他所有请求重定向到HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ============================================================================
# HTTPS主站点配置
# ============================================================================

server {
    listen 443 ssl http2;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # 根目录
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # ========================================================================
    # SSL配置
    # ========================================================================
    
    # SSL证书路径
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # SSL协议和加密套件
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL会话配置
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP装订
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
    
    # DNS解析器
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # ========================================================================
    # 安全头配置
    # ========================================================================
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # 防止点击劫持
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # 防止MIME类型嗅探
    add_header X-Content-Type-Options "nosniff" always;
    
    # XSS保护
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 引用策略
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 权限策略
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;
    
    # 内容安全策略
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https:; connect-src 'self' wss: ws:; frame-ancestors 'self'; base-uri 'self'; form-action 'self';" always;
    
    # ========================================================================
    # 日志配置
    # ========================================================================
    
    access_log /var/log/nginx/app_access.log main;
    error_log /var/log/nginx/app_error.log warn;
    
    # ========================================================================
    # 限流配置
    # ========================================================================
    
    # 一般请求限流
    limit_req zone=general burst=20 nodelay;
    
    # 连接数限制
    limit_conn conn_limit_per_ip 20;
    
    # ========================================================================
    # 静态文件配置
    # ========================================================================
    
    # 静态资源缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # 跨域配置
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # 尝试提供文件，如果不存在则返回404
        try_files $uri =404;
    }
    
    # 字体文件特殊处理
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }
    
    # Robots.txt
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
        try_files $uri =404;
    }
    
    # ========================================================================
    # API代理配置
    # ========================================================================
    
    # API路由
    location /api/ {
        # API限流
        limit_req zone=api burst=50 nodelay;
        
        # 代理到后端应用
        proxy_pass http://app_backend;
        
        # 代理头设置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # 登录API特殊限流
    location /api/auth/login {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 禁用缓存
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # WebSocket支持
    location /ws/ {
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特殊超时设置
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }
    
    # ========================================================================
    # 文件上传配置
    # ========================================================================
    
    # 文件上传路径
    location /api/upload {
        # 上传限流
        limit_req zone=api burst=10 nodelay;
        
        # 文件大小限制
        client_max_body_size 10M;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 上传超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 禁用缓存
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # ========================================================================
    # 健康检查
    # ========================================================================
    
    # 应用健康检查
    location /health {
        access_log off;
        proxy_pass http://app_backend/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # 快速超时
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Nginx健康检查
    location /nginx-health {
        access_log off;
        return 200 "nginx healthy";
        add_header Content-Type text/plain;
    }
    
    # ========================================================================
    # 主应用路由
    # ========================================================================
    
    # 主页面和SPA路由
    location / {
        # 尝试提供静态文件，否则返回index.html (SPA支持)
        try_files $uri $uri/ /index.html;
        
        # HTML文件不缓存
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }
    
    # ========================================================================
    # 错误页面配置
    # ========================================================================
    
    # 自定义错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        root /usr/share/nginx/html;
    }
    
    location = /50x.html {
        internal;
        root /usr/share/nginx/html;
    }
    
    # ========================================================================
    # 安全配置
    # ========================================================================
    
    # 隐藏敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问配置文件
    location ~* \.(conf|ini|log|bak|backup|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问版本控制文件
    location ~ /\.(git|svn|hg) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ========================================================================
    # 性能优化
    # ========================================================================
    
    # 启用gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        application/xhtml+xml
        application/atom+xml
        image/svg+xml;
    
    # Brotli压缩 (如果可用)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}

# ============================================================================
# www重定向配置
# ============================================================================

server {
    listen 443 ssl http2;
    server_name www.${DOMAIN};
    
    # SSL配置
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # 重定向到主域名
    return 301 https://${DOMAIN}$request_uri;
}